{
    /* fileTypes = (phtml, php, php3, php4, php5, inc); */
	firstLineMatch = "^(<\\?php\\>|#!/.*php\\>)";
    foldingStartMarker = "(<(?i:(head|table|div|style|script|ul|ol|form|dl))\\>.*?>|\\{)"; 
    foldingStopMarker = "(</(?i:(head|table|div|style|script|ul|ol|form|dl))>|\\})"; 
    name = "HTML (PHP)"; 
    scopeName = "text.html";
    patterns = (
        {
            name = "comment.html"; 
            begin = "<!--"; 
            end = "-->"; 
            patterns = (
                {
                    name = "macro.server-side-include.html"; 
                    begin = "^#\\s*(include|config|echo|exec|fsize|flastmod|printenv|set)"; 
                    end = "(?=\\s*--|>)"; 
                }, 
                {
                    name = "invalid.bad-comment-end.html"; 
                    match = ">|<"; 
                }
            ); 
        }, 
        /* */
        {   name = "source.php.embedded.html"; 
            begin = "<\\?(php|=)?"; 
            end = "\\?>"; 
            patterns = ({include = "source.php"; }); 
        }, 
        /* * /
        {

            match = "<(?i:style)\\>.*?>?(?s:.*?)</(?i:style)>";
            captures = {
                1 = {   name = "dummy.one"; };
                2 = {   name = "source.css.embedded.html";
                        patterns = ( { include = "source.css"; } ); 
                };
                3 = {   name = "dummy.three"; };
            }; 
        }, 
         /* */
        {   name = "source.css.embedded.html"; 
            begin = "(^\\s+)?<(?i:style)\\>.*?>?"; 
            end = "</(?i:style)>(\\s+$)?"; 
            patterns = ( {include = "source.css"; } ); 
        }, 
         /* */
       {    name = "source.js.embedded.html"; 
            begin = "(^\\s+)?<(?i:script)\\>.*?>?"; 
            end = "</(?i:script)>(\\s+$)?"; 
            patterns = ({include = "source.js"; }); 
        }, 
        /* */
        {
            name = "meta.docinfo.xml-processing.html"; 
            match = "<\\?xml.*?\\?>"; 
        }, 
        {
            name = "meta.docinfo.doctype.html"; 
            begin = "<!DOCTYPE"; 
            end = ">"; 
            patterns = (
                {
                    name = "meta.docinfo.doctype.identifier-and-DTD.html"; 
                    match = "\"[^\">]*\""; 
                }
            ); 
        }, 
        {
            begin = "</?(a|abbr|acronym|address|area|b|base|big|blockquote|body|br|button|caption|cite|code|col|colgroup|dd|del|dfn|div|dl|dt|em|fieldset|form|frame|frameset|(h[1-6])|head|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|meta|noframes|noscript|object|ol|optgroup|option|p|param|pre|q|samp|script|select|small|span|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|ul|var)"; 
            end = "/?>"; 
            captures = { 1 = { name = "keyword.markup.element-name.html"; }; };
            patterns = (
                {
                    begin = "(abbr|accept-charset|accept|accesskey|action|align|alt|archive|axis|border|cellpadding|cellspacing|char|charoff|charset|checked|cite|class|classid|codebase|codetype|cols|colspan|content|coords|data|datetime|declare|defer|dir|disabled|encoding|enctype|for|frame|frameborder|headers|height|href|hreflang|http-equiv|id|ismap|label|lang|language|longdesc|marginheight|marginwidth|maxlength|media|method|multiple|name|nohref|noresize|onblur|onchange|onclick|ondblclick|onfocus|onkeydown|onkeypress|onkeyup|onload|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onreset|onselect|onsubmit|onunload|profile|readonly|rel|rev|rows|rowspan|rules|scheme|scope|scrolling|selected|shape|size|span|src|standby|style|summary|tabindex|target|title|type|usemap|valign|value|valuetype|version|width|xmlns|xmlns:isbn|xml:lang)=(?=\")"; 
                    end = "(?=\\s|>)"; 
                    captures = { 1 = { name = "keyword.markup.attribute-name.html"; }; };
                    patterns = (
                        {
                            name = "string.double-quoted.html"; 
                            begin = "\""; end = "\"";
                            patterns = (
                                {
                                    name = "source.php.embedded.html"; 
                                    begin = "<\\?(php)?"; end = "\\?>";
                                    patterns = ( { include = "source.php"; } );
                                }
                            );
                        }
                    ); 
                }
            ); 
        }, 
        {
            name = "constant.character.html"; 
            match = "&([a-zA-Z]+|#[0-9]+|#x[0-9a-fA-F]+);"; 
        }
    );
    uuid = "56FC1CD0-B7C6-11D9-A1CF-000D93C8BE28"; 
}
